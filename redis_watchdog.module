<?php

/**
 * Implements hook_menu().
 */
function redis_watchdog_menu() {
  $items = [];
  $items['admin/reports/redislog'] = [
    'title' => 'Recent Redis Log Messages',
    'description' => 'View events that have recently been logged.',
    'page callback' => 'redis_watchdog_overview',
    'access arguments' => ['access site reports'],
    'weight' => -1,
    'file' => 'redis_watchdog.admin.inc',
  ];

  $items['admin/reports/redislog/event/%'] = [
    'title' => 'Details',
    'page callback' => 'redis_watchdog_event',
    'page arguments' => [4],
    'access arguments' => ['access site reports'],
    'file' => 'redis_watchdog.admin.inc',
  ];
  $items['admin/reports/redislog/type/%/%'] = [
    'title' => 'Log Type Report',
    'page callback' => 'redis_watchdog_type',
    'access arguments' => ['access site reports'],
    'file' => 'redis_watchdog.admin.inc',
  ];
  return $items;
}

/**
 * Implements hook_watchdog().
 */
function redis_watchdog_watchdog(array $entry) {
  $q = redis_watchdog_client();
  $q->log($entry);
}

/**
 * Private function to return the types of messages stored.
 *
 * @return array|mixed
 */
function _redis_watchdog_get_message_types() {
  $log = redis_watchdog_client();
  return $log->getMessageTypes();
}

/**
 * Private function to return the types of messages stored.
 *
 * @return array|mixed
 */
function _redis_watchdog_get_message_types_count() {
  $log = redis_watchdog_client();
  return $log->getMessageTypesCounts();
}

/**
 * Implements hook_theme().
 */
function redis_watchdog_theme() {
  return [
    'redis_watchdog_message' => [
      'variables' => ['event' => NULL, 'link' => FALSE],
      'file' => 'redis_watchdog.admin.inc',
    ],
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */

function redis_watchdog_form_redis_settings_form_alter(&$form, &$form_state) {
  $form['watchdog'] = [
    '#type' => 'fieldset',
    '#title' => t('Drupal Watchdog Logs'),
    '#description' => t('Controls for the Watchdog module'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  ];
  $form['watchdog']['redis_watchdogprefix'] = [
    '#type' => 'textfield',
    '#title' => t('Key prefix'),
    '#description' => t('You may specify a prefix if you are using a single Redis server for multiple sites. This will add a prefix to the beginning of the keys.'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#default_value' => variable_get('redis_watchdogprefix', ''),
  ];
  $form['watchdog']['redis_watchdogrecentlimit'] = [
    '#type' => 'textfield',
    '#size' => 10,
    '#title' => t('Recent log limit'),
    '#description' => t('This is a limit on the display of recent logs in the default log view. This can be any number, but the larger the number the larger the dataset that is pulled into the default log page.'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#default_value' => variable_get('redis_watchdogrecentlimit', 200),
  ];
  $form['watchdog']['redis_watchdogarchivelimit'] = [
    '#type' => 'textfield',
    '#size' => 10,
    '#title' => t('Archive log limit'),
    '#description' => t('This is the limit on the amount of logs that will be saved for any log type.'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#default_value' => variable_get('redis_watchdogarchivelimit', 5000),
  ];
}

/**
 * Return the Redis client for log activity.
 *
 * @return object
 */

function redis_watchdog_client() {
  $prefix = variable_get('redis_watchdogprefix', '');
  $limit = variable_get('redis_watchdogrecentlimit', 200);
  $archive = variable_get('redis_watchdogarchivelimit', 5000);
  $client = new Redislog($prefix, $limit, $archive);
  return $client;
}